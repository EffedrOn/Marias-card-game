≈†imon Fabu≈° 
23.5.2025
USER DOCUMENTATION
Mari√°≈° card game
https://sk.wikipedia.org/wiki/Mari√°≈°


This is a CLI-based implementation of the Mari√°≈° card game written in Java using the Maven build tool. 
The game simulates: 
‚Ä¢card dealing
‚Ä¢choosing trump
‚Ä¢throwing 2 cards away at the beginning of the game 
‚Ä¢trick-taking logic
‚Ä¢marriage (King and Upper of same colour)
‚Ä¢bonus points for taking last trick
‚Ä¢player interactions (human and bots)
‚Ä¢scorekeeping / keeping track of how much money players win/loose

with a structured object-oriented design.

‚Ä¢ The human player (user) is first to play when the program is activated

The game enables only one variant = Colour. 
Fixed price of each round of game is 2 cents. 
	‚Ä¢ Player who lost pays from his bank 2 cents to each other player who won.
	‚Ä¢ Player who won get payed 2 cents by every other player who lost.


	Prerequisites

Before you begin, ensure the following tools are installed:
	‚Ä¢	Java 23 SDK
	‚Ä¢	Apache Maven 3.9+

Make sure JAVA_HOME points to JDK 23.


	Project Structure

Main source files are located in: src/main/java/com/github/EffedrOn/Marias/

Test files are located in: src/test/java/com/github/EffedrOn/Marias/


	Build & Compile

To compile the project: mvn compile
This compiles all classes without running tests.


	Run the Game

To run the main CLI interface: mvn exec:java

This starts the Main class located at: com.github.EffedrOn.Marias.Main

The CLI will guide you through a game of Marias with a combination of human and bot players.


	Running Unit Tests

To execute all unit tests: mvn test

Tests are included for:
	‚Ä¢	HandTest.java
	‚Ä¢	DeckTest.java
	‚Ä¢	TrickTest.java
	‚Ä¢	CardComparatorTest.java

These cover key functionality like card dealing, trick logic, hand management, and comparison rules.


	Game Features

‚Ä¢	Card Deck: Bohemian (German) playing cards
‚Ä¢	Players: Human and bot-controlled
‚Ä¢	Bot Logic: Basic strategy implemented to choose cards
‚Ä¢	Round-Based: Multiple rounds with score resetting
‚Ä¢	Banking System: Each player has a virtual bank; winners gain cents based on results
‚Ä¢	Trick Comparison: Uses CardComparator based on current trump
‚Ä¢	Test-Driven Development: Unit tests included for core logic


	Notes
‚Ä¢	Java version is explicitly set in pom.xml (<source>23</source>)
‚Ä¢	Game logic is managed primarily in Game, GameController, and Table
‚Ä¢	IO interaction is handled in IOHandler
‚Ä¢	Player behavior is abstracted using Player, HumanPlayer, and BotPlayer


	Mari√°≈°(Colour):
 
‚Ä¢ The game is played by 3 players
‚Ä¢ 2 players play against 1
‚Ä¢ The first player choose the trump suit.
‚Ä¢ He has to pick 2 cards which he will throw away and they will be not touched throughout the rest of the round.
‚Ä¢ First player plays first card.

Rules:

‚Ä¢ Player has to "confess" the colour and if the player has higher card as the highest one in the trick on table, he has to play it.
‚Ä¢ If player does not have card of suit of first card played in trick, but has a trump -> he has to play it.
‚Ä¢ If player does not even have a trump, he can play any card from his hand.
‚Ä¢ The player who won the last trick plays the first card of next round of tricks.

‚Ä¢ Order of cards: Ace, Ten, King, Hornik, Dolnik, 9, 8, 7
Goal:

‚Ä¢ The goal of game is to take as much as possible valued cards and bonus points. Valued cards are 10s and Aces.
‚Ä¢ Last trick has value of 10.
‚Ä¢ Marriage has value of 20, in trump colour 40.

If no marriages were played max ‚àë game = 90
If some marriages were played ‚àë game in [110 - 190]

Example of playing the game:

[INFO] Human player created
[INFO] Bot1 player created
[INFO] Bot2 player created
[INFO] Human player entered the game
[INFO] Bot1 player entered the game
[INFO] Bot2 player entered the game
[INFO] Table created
[INFO] Deck created
[INFO] End of Table initialization
---------------------------------------------------
Starting a new game round...
---------------------------------------------------
[INFO] Dealing Cards
> Choose trump: 
| 0 : D‚ù§Ô∏è | 1 :  K‚ö´ | 2 : 10‚ù§Ô∏è | 3 :  9‚ö´ | 4 : 10üå∞ | 5 : HüçÉ | 6 : 9üçÉ |
> Choose card index to pick the trump: 
2
> Your hand (choose 2 cards to throw away): 
| 0 : D‚ù§Ô∏è | 1 :  K‚ö´ | 2 : 10‚ù§Ô∏è | 3 :  9‚ö´ | 4 : 10üå∞ | 5 : HüçÉ | 6 : 9üçÉ | 7 : 9üå∞ | 8 :  A‚ö´ | 9 : KüçÉ | 10 : 8‚ù§Ô∏è | 11 : H‚ù§Ô∏è |
> Enter index of the FIRST card to throw away: 
0
> Enter index of the SECOND card to throw away: 
2
[ERROR] You cannot throw away an Ace or a 10. Pick different cards.
> Enter index of the FIRST card to throw away: 
6
> Enter index of the SECOND card to throw away: 
7
[INFO] Two cards have been thrown away
---------------------------------------------------
[INFO] Trump suit is: ‚ù§Ô∏è
Your hand:
| 0 : D‚ù§Ô∏è | 1 :  K‚ö´ | 2 : 10‚ù§Ô∏è | 3 :  9‚ö´ | 4 : 10üå∞ | 5 : HüçÉ | 6 :  A‚ö´ | 7 : KüçÉ | 8 : 8‚ù§Ô∏è | 9 : H‚ù§Ô∏è |
> Choose card index to play: 
0
Human played: D‚ù§Ô∏è
Bot1 played: A‚ù§Ô∏è
Bot2 played: K‚ù§Ô∏è
[INFO] Bot1 wins the trick!
[INFO] Trick value: 10
---------------------------------------------------
Bot1 played: D‚ö´
Bot2 played: 10‚ö´
[INFO] Trump suit is: ‚ù§Ô∏è
Your hand:
| 0 :  K‚ö´ | 1 : 10‚ù§Ô∏è | 2 :  9‚ö´ | 3 : 10üå∞ | 4 : HüçÉ | 5 :  A‚ö´ | 6 : KüçÉ | 7 : 8‚ù§Ô∏è | 8 : H‚ù§Ô∏è |
> Choose card index to play: 

  
